{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"hhAOQ9_kJFYZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729918729704,"user_tz":-540,"elapsed":44610,"user":{"displayName":"박민규","userId":"09505035144875821444"}},"outputId":"07078b05-15ac-4792-a696-66b5af15fc6a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zrpSWN_zJoma"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","source":["df=pd.read_csv('/content/drive/MyDrive/Colab Notebooks/DAT/24-2/캡스톤/Training/train.csv')"],"metadata":{"id":"fhYf8BNbMPIs","executionInfo":{"status":"ok","timestamp":1729923921577,"user_tz":-540,"elapsed":7370,"user":{"displayName":"박민규","userId":"09505035144875821444"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"A8sbM-vaST7C","executionInfo":{"status":"ok","timestamp":1729923921578,"user_tz":-540,"elapsed":15,"user":{"displayName":"박민규","userId":"09505035144875821444"}},"outputId":"1b983bb5-162d-4692-cc7f-df4795abe690"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               site                 sid     ldate  lrate  llevel leaktype  \\\n","0      S-4687025030  S-0359369085120315  20200708     90     256      out   \n","1      S-4677025028  S-0359369083968368  20190601     90     542      out   \n","2      S-4673025027  S-0359369085133797  20201028     90     705      out   \n","3      S-4772025022  S-0359369084117593  20200505     90     499      out   \n","4      S-4729010102  S-0359369084010178  20200520     90     423      out   \n","...             ...                 ...       ...    ...     ...      ...   \n","62559  S-4571025029  S-0359369084040266  20200722     30     283   normal   \n","62560  S-4571025029  S-0359369084040548  20200611     40     164   normal   \n","62561  S-4571025029  S-0359369084036900  20200827     70     162   normal   \n","62562  S-4521010100  S-0359369084094479  20200726     30     159   normal   \n","62563  S-4571025029  S-0359369084040290  20200725     30     344   normal   \n","\n","       0HZ  10HZ  20HZ  30HZ  ...  MAX10  MAX11  MAX12  MAX13  MAX14  MAX15  \\\n","0        0    18    19    16  ...   4690    243   4710    284   4700    324   \n","1        0     4     2     4  ...    310    423    300    711    270    412   \n","2        0     0     0     3  ...    240    751    240    897    240    741   \n","3        0     2     2     2  ...    370    549    360    427    370    800   \n","4        0     3     3     3  ...    400    521    400    395    400    461   \n","...    ...   ...   ...   ...  ...    ...    ...    ...    ...    ...    ...   \n","62559    0     4     3     3  ...    190     44    260     60    190     32   \n","62560    0     4     4     5  ...    260    196    260     65    260     52   \n","62561    0     4     4     4  ...    310    147    290    162    290    226   \n","62562    0     4     5     5  ...    390     58    380     94    380     61   \n","62563    0     4     4     4  ...    310     25    310    404   1460     11   \n","\n","       MAX16  MAX17  MAX18  MAX19  \n","0       4670    230   4710    260  \n","1        270    531    290    538  \n","2        240    741    240    562  \n","3        370    552    370    458  \n","4        400    470    400    515  \n","...      ...    ...    ...    ...  \n","62559    260    439    260     77  \n","62560    260     38    260     58  \n","62561    290    171    310     98  \n","62562    380    133    380     67  \n","62563    310     17    310     32  \n","\n","[62564 rows x 539 columns]"],"text/html":["\n","  <div id=\"df-aa10038c-3b9a-4d7f-b31e-bb22bfe4af8f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>site</th>\n","      <th>sid</th>\n","      <th>ldate</th>\n","      <th>lrate</th>\n","      <th>llevel</th>\n","      <th>leaktype</th>\n","      <th>0HZ</th>\n","      <th>10HZ</th>\n","      <th>20HZ</th>\n","      <th>30HZ</th>\n","      <th>...</th>\n","      <th>MAX10</th>\n","      <th>MAX11</th>\n","      <th>MAX12</th>\n","      <th>MAX13</th>\n","      <th>MAX14</th>\n","      <th>MAX15</th>\n","      <th>MAX16</th>\n","      <th>MAX17</th>\n","      <th>MAX18</th>\n","      <th>MAX19</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>S-4687025030</td>\n","      <td>S-0359369085120315</td>\n","      <td>20200708</td>\n","      <td>90</td>\n","      <td>256</td>\n","      <td>out</td>\n","      <td>0</td>\n","      <td>18</td>\n","      <td>19</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>4690</td>\n","      <td>243</td>\n","      <td>4710</td>\n","      <td>284</td>\n","      <td>4700</td>\n","      <td>324</td>\n","      <td>4670</td>\n","      <td>230</td>\n","      <td>4710</td>\n","      <td>260</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>S-4677025028</td>\n","      <td>S-0359369083968368</td>\n","      <td>20190601</td>\n","      <td>90</td>\n","      <td>542</td>\n","      <td>out</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>310</td>\n","      <td>423</td>\n","      <td>300</td>\n","      <td>711</td>\n","      <td>270</td>\n","      <td>412</td>\n","      <td>270</td>\n","      <td>531</td>\n","      <td>290</td>\n","      <td>538</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>S-4673025027</td>\n","      <td>S-0359369085133797</td>\n","      <td>20201028</td>\n","      <td>90</td>\n","      <td>705</td>\n","      <td>out</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>240</td>\n","      <td>751</td>\n","      <td>240</td>\n","      <td>897</td>\n","      <td>240</td>\n","      <td>741</td>\n","      <td>240</td>\n","      <td>741</td>\n","      <td>240</td>\n","      <td>562</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>S-4772025022</td>\n","      <td>S-0359369084117593</td>\n","      <td>20200505</td>\n","      <td>90</td>\n","      <td>499</td>\n","      <td>out</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>370</td>\n","      <td>549</td>\n","      <td>360</td>\n","      <td>427</td>\n","      <td>370</td>\n","      <td>800</td>\n","      <td>370</td>\n","      <td>552</td>\n","      <td>370</td>\n","      <td>458</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>S-4729010102</td>\n","      <td>S-0359369084010178</td>\n","      <td>20200520</td>\n","      <td>90</td>\n","      <td>423</td>\n","      <td>out</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>400</td>\n","      <td>521</td>\n","      <td>400</td>\n","      <td>395</td>\n","      <td>400</td>\n","      <td>461</td>\n","      <td>400</td>\n","      <td>470</td>\n","      <td>400</td>\n","      <td>515</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>62559</th>\n","      <td>S-4571025029</td>\n","      <td>S-0359369084040266</td>\n","      <td>20200722</td>\n","      <td>30</td>\n","      <td>283</td>\n","      <td>normal</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>190</td>\n","      <td>44</td>\n","      <td>260</td>\n","      <td>60</td>\n","      <td>190</td>\n","      <td>32</td>\n","      <td>260</td>\n","      <td>439</td>\n","      <td>260</td>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>62560</th>\n","      <td>S-4571025029</td>\n","      <td>S-0359369084040548</td>\n","      <td>20200611</td>\n","      <td>40</td>\n","      <td>164</td>\n","      <td>normal</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>...</td>\n","      <td>260</td>\n","      <td>196</td>\n","      <td>260</td>\n","      <td>65</td>\n","      <td>260</td>\n","      <td>52</td>\n","      <td>260</td>\n","      <td>38</td>\n","      <td>260</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>62561</th>\n","      <td>S-4571025029</td>\n","      <td>S-0359369084036900</td>\n","      <td>20200827</td>\n","      <td>70</td>\n","      <td>162</td>\n","      <td>normal</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>310</td>\n","      <td>147</td>\n","      <td>290</td>\n","      <td>162</td>\n","      <td>290</td>\n","      <td>226</td>\n","      <td>290</td>\n","      <td>171</td>\n","      <td>310</td>\n","      <td>98</td>\n","    </tr>\n","    <tr>\n","      <th>62562</th>\n","      <td>S-4521010100</td>\n","      <td>S-0359369084094479</td>\n","      <td>20200726</td>\n","      <td>30</td>\n","      <td>159</td>\n","      <td>normal</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>...</td>\n","      <td>390</td>\n","      <td>58</td>\n","      <td>380</td>\n","      <td>94</td>\n","      <td>380</td>\n","      <td>61</td>\n","      <td>380</td>\n","      <td>133</td>\n","      <td>380</td>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>62563</th>\n","      <td>S-4571025029</td>\n","      <td>S-0359369084040290</td>\n","      <td>20200725</td>\n","      <td>30</td>\n","      <td>344</td>\n","      <td>normal</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>310</td>\n","      <td>25</td>\n","      <td>310</td>\n","      <td>404</td>\n","      <td>1460</td>\n","      <td>11</td>\n","      <td>310</td>\n","      <td>17</td>\n","      <td>310</td>\n","      <td>32</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>62564 rows × 539 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa10038c-3b9a-4d7f-b31e-bb22bfe4af8f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-aa10038c-3b9a-4d7f-b31e-bb22bfe4af8f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-aa10038c-3b9a-4d7f-b31e-bb22bfe4af8f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9c5196d5-29fd-4d85-ba39-fecf92300cc0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9c5196d5-29fd-4d85-ba39-fecf92300cc0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9c5196d5-29fd-4d85-ba39-fecf92300cc0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_25dda333-7a22-458c-b0f4-7e1b235e160f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_25dda333-7a22-458c-b0f4-7e1b235e160f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["#주파수 데이터만 활용\n","X_train = df[[col for col in df.columns if col.endswith('HZ')]]\n","y_train = df['leaktype']"],"metadata":{"id":"iayMmPKIT21u","executionInfo":{"status":"ok","timestamp":1729923921579,"user_tz":-540,"elapsed":12,"user":{"displayName":"박민규","userId":"09505035144875821444"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["val=pd.read_csv('/content/drive/MyDrive/Colab Notebooks/DAT/24-2/캡스톤/Validation/validation.csv')"],"metadata":{"id":"v5htjj5-UX5p","executionInfo":{"status":"ok","timestamp":1729923921579,"user_tz":-540,"elapsed":11,"user":{"displayName":"박민규","userId":"09505035144875821444"}}},"execution_count":54,"outputs":[]},{"cell_type":"code","source":["#주파수 데이터만 활용\n","X_test = val[[col for col in val.columns if col.endswith('HZ')]]\n","y_test=val['leaktype']"],"metadata":{"id":"uoFSCBZjUhqT","executionInfo":{"status":"ok","timestamp":1729923921579,"user_tz":-540,"elapsed":10,"user":{"displayName":"박민규","userId":"09505035144875821444"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import accuracy_score, classification_report\n","\n","# Create and train the RandomForestClassifier\n","rf_classifier = RandomForestClassifier(n_estimators=100, random_state=42) # You can adjust n_estimators\n","rf_classifier.fit(X_train, y_train)\n","\n","# Make predictions on the test set\n","y_pred = rf_classifier.predict(X_test)\n","\n","# Evaluate the model\n","accuracy = accuracy_score(y_test, y_pred)\n","print(f\"Accuracy: {accuracy}\")\n","print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N7WDZKqHUlbi","executionInfo":{"status":"ok","timestamp":1729924012341,"user_tz":-540,"elapsed":90772,"user":{"displayName":"박민규","userId":"09505035144875821444"}},"outputId":"329ce112-487e-4cb0-e5cb-4f587e947818"},"execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.879923273657289\n","              precision    recall  f1-score   support\n","\n","          in       0.89      0.84      0.86      1659\n","       noise       0.84      0.70      0.77       629\n","      normal       0.88      0.98      0.93      2462\n","       other       0.92      0.71      0.80       878\n","         out       0.87      0.92      0.89      2192\n","\n","    accuracy                           0.88      7820\n","   macro avg       0.88      0.83      0.85      7820\n","weighted avg       0.88      0.88      0.88      7820\n","\n"]}]},{"cell_type":"code","source":["# prompt: 변수중요도 상위 10개 출력\n","\n","importances = rf_classifier.feature_importances_\n","feature_names = X_train.columns\n","importance_df = pd.DataFrame({'Feature': feature_names, 'Importance': importances})\n","importance_df = importance_df.sort_values(by='Importance', ascending=False)\n","print(importance_df.head(10))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0jCRVLlRVVCK","executionInfo":{"status":"ok","timestamp":1729924012343,"user_tz":-540,"elapsed":7,"user":{"displayName":"박민규","userId":"09505035144875821444"}},"outputId":"9efa4817-e340-4370-9a32-09b0cc573aec"},"execution_count":57,"outputs":[{"output_type":"stream","name":"stdout","text":["   Feature  Importance\n","32   320HZ    0.014153\n","34   340HZ    0.013958\n","33   330HZ    0.013497\n","35   350HZ    0.011944\n","19   190HZ    0.011830\n","36   360HZ    0.010729\n","31   310HZ    0.010495\n","24   240HZ    0.010123\n","22   220HZ    0.009118\n","20   200HZ    0.008613\n"]}]},{"cell_type":"markdown","source":["HZ로만 학습시켰을 때 정확도 약 88 %"],"metadata":{"id":"pHFFB2SybKda"}}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMVay8Wu+yi2FtdlQSb++Oo"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}